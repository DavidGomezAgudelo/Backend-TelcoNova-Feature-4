# --------------------------
# Enums (Si los usas como tipos, reemplázalos por tipos)
# --------------------------
type EventType {
  id: ID!
  name: String!
  priorityLevel: Int!
}

type DeliveryMethod {
  id: ID!
  name: String!
}

type DeliveryStatus {
  id: ID!
  name: String!
}

# --------------------------
# Tipos Principales
# --------------------------
type Role {
  id: ID!
  name: String!
}

type User {
  id: ID!
  name: String!
  email: String!
  phone: String!
  role: Role
  address: String
  createdAt: String
}

type Event {
  id: ID!
  type: EventType!
  description: String
  date: String!
}

type Alert {
  id: ID!
  event: Event!
  deliveryMethod: DeliveryMethod!
  MessageTemplate: String
  active: Boolean!
  createdAt: String!
}

type Notification {
  id: ID!
  alert: Alert!
  scheduledDate: String!
  status: DeliveryStatus!
  createdAt: String!
}

# --------------------------
# Inputs (Definidos una sola vez)
# --------------------------
input CreateUserInput {
  name: String!
  email: String!
  phone: String!
  roleId: ID!
  address: String
}

input CreateRoleInput {
  name: String!
}

input CreateAlertInput {
  eventId: ID!
  deliveryMethodId: ID!
  MessageTemplate: String!
  active: Boolean = true
}

input UpdateAlertInput {
  deliveryMethodId: ID
  MessageTemplate: String
  active: Boolean
}

# --------------------------
# Queries y Mutations (Únicas definiciones)
# --------------------------
type Query {
  getUser(id: ID!): User
  getAlerts: [Alert]
  getAlertById(id: ID!): Alert
  getRoles: [Role]
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  createAlert(input: CreateAlertInput!): Alert!
  updateAlert(id: ID!, input: UpdateAlertInput!): Boolean!
  deleteAlert(id: ID!): Boolean!
  createRole(input: CreateRoleInput!): Role!
}